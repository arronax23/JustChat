@page
@model JustChat.Pages.Chat.ChatModel
@{
}


<h1>@Model.ChatVM.RoomName</h1>

<div class="chat-content">
    @foreach (var message in Model.ChatVM?.Messages)
    {
        <div>
            <span>@message.Author.UserName </span><span>@message.Content </span><span>@message.TimeStamp.ToLocalTime()</span>
        </div>
    }
</div>

<div>
    <form method="post" onsubmit="onSubmit(event)">
        <div>
            <input name="content" onchange="conentChange(event)" />
        </div>
        <div>
            <button id="sendButton" class="btn waves-effect waves-light" type="submit" >
                Submit@*<i class="material-icons right">send</i>*@
            </button>
        </div>
        @*<input name="authorId" value="@Model.ChatVM.AuthorId" class="hide" />
        <input name="roomdId" value="@Model.ChatVM.RoomId" class="hide" />
        <input name="roomName" value="@Model.ChatVM.RoomName" class="hide" />
        <input name="userName" value="@Model.ChatVM.UserName" class="hide" />*@
    </form>
</div>

@section Scripts {
    <script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
    <script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (message) {
        let chatContent = document.querySelector(".chat-content");
        let div = document.createElement("div");
        div.innerHTML = `<span>${message.userName}:</span><span>$ {message.content}</span><span>${message.timeStamp}</span>`
        chatContent.appendChild(div);

    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
        connection.invoke('JoinRoom', '@Model.ChatVM.RoomName');
    }).catch(function (err) {
        return console.log(err.toString());
    });

    window.addEventListener('unload', function () {
        connection.invoke('LeaveRoom', '@Model.ChatVM.RoomName');
    });

        let onSubmit = function (event) {
            event.preventDefault();
            console.log(event.target)
            connection.invoke('SendRoomMessage', {
                content: content,
                timeStamp: null,
                userName:'@Model.ChatVM.UserName',
                authorId:parseInt('@Model.ChatVM.AuthorId'),
                roomId:parseInt('@Model.ChatVM.RoomId'),
                roomName: '@Model.ChatVM.RoomName'

            });
        }

        let content = '';
        let conentChange = function (event) {
            content = event.target.value;
        }
    </script>>
}